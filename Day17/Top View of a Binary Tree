/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
#include<bits/stdc++.h>
vector<int> getTopView(TreeNode<int> *root) {
    vector<int> res;
    if(root==NULL)return res;
    map<int ,int > m;
    queue<pair<TreeNode<int> *,int> > q;
    q.push({root,0});
    while(q.size()){
        int s=q.size();
        for(int i=0;i<s;i++){
            TreeNode<int>* node=q.front().first;
            int l=q.front().second;q.pop();
            if(node->left)q.push({node->left,l-1});
            if(node->right)q.push({node->right,l+1});
            if(m.find(l)==m.end())m[l]=node->val;
        }
    }
    for(auto i:m){
        res.push_back(i.second);
    }
    return res;
}
