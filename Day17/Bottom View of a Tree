/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
#include<bits/stdc++.h>
vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here
    vector<int> res;
   map<int ,int> m;
    queue<pair<BinaryTreeNode<int> * ,int>> q;
    if(root==NULL)return res;
    q.push({root,0});
    while(q.size()){
        int s=q.size();
        for(int i=0;i<s;i++){
            BinaryTreeNode<int> * node=q.front().first;
            int l=q.front().second;q.pop();
            if(node->left)q.push({node->left,l-1});
            if(node->right)q.push({node->right,l+1});
            m[l]=node->data;
        }
    }
 //   sort(m.begin(),m.end());
    for(auto i:m){
        res.push_back(i.second);
    }
    return res;
    
    
}
