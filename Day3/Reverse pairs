#include <bits/stdc++.h> 
int merge(vector<int>& nums,int low,int mid,int high){
    int total=0;
    int j=mid+1;
    for (int i = low; i <= mid; i++) {
    while (j <= high && nums[i] > 2LL * nums[j]) {
      j++;
    }
    total += (j - (mid + 1));
  }
  vector < int > t;
  int left = low, right = mid + 1;
  while (left <= mid && right <= high) {
    if (nums[left] <= nums[right]) {
      t.push_back(nums[left++]);
    } else {
      t.push_back(nums[right++]);
    }}
  while (left <= mid) {
    t.push_back(nums[left++]);
  }
  while (right <= high) {
    t.push_back(nums[right++]);
  }
  for (int i = low; i <= high; i++) {
    nums[i] = t[i - low];
  }
  return total;
}
int merge_sort(vector<int>& arr,int left,int right ){
    int mid,rp=0;
    if(right>left){
        mid=(left+right)/2;
        rp+=merge_sort(arr,left,mid);
        rp+=merge_sort(arr,mid+1,right);
        rp+=merge(arr,left,mid,right);
    }
    return rp ;
}
int reversePairs(vector<int> &arr, int n){
	int rp=merge_sort(arr,0,n-1);
    return rp;
}
